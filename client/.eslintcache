[{"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\AppRouter.jsx":"1","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeItem.jsx":"2","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\index.jsx":"3","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\App.jsx":"4","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\ChallengeStore.jsx":"5","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\UserStore.jsx":"6","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\userAPI.jsx":"7","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\routes.jsx":"8","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\index.jsx":"9","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ChallengePage.jsx":"10","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Auth.jsx":"11","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\CTF.jsx":"12","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ToSolve.jsx":"13","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Admin.jsx":"14","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\challengeAPI.jsx":"15","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\TypeBar.jsx":"16","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeList.jsx":"17","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\DifficultyBar.jsx":"18","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\Pages.jsx":"19","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateBrand.jsx":"20","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateType.jsx":"21","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateChallenge.jsx":"22","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\NavBar\\NavBar.jsx":"23","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\utils\\consts.jsx":"24"},{"size":751,"mtime":1651060553050,"results":"25","hashOfConfig":"26"},{"size":1091,"mtime":1651246646293,"results":"27","hashOfConfig":"26"},{"size":479,"mtime":1651408399841,"results":"28","hashOfConfig":"26"},{"size":847,"mtime":1651246628829,"results":"29","hashOfConfig":"26"},{"size":1258,"mtime":1651245067910,"results":"30","hashOfConfig":"26"},{"size":362,"mtime":1651241638564,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1611985807000,"results":"32","hashOfConfig":"26"},{"size":780,"mtime":1651243086775,"results":"33","hashOfConfig":"26"},{"size":402,"mtime":1650612737462,"results":"34","hashOfConfig":"26"},{"size":2121,"mtime":1651246430236,"results":"35","hashOfConfig":"26"},{"size":2534,"mtime":1651246675347,"results":"36","hashOfConfig":"26"},{"size":1466,"mtime":1651246533848,"results":"37","hashOfConfig":"26"},{"size":148,"mtime":1650911949271,"results":"38","hashOfConfig":"26"},{"size":1356,"mtime":1651246412126,"results":"39","hashOfConfig":"26"},{"size":1049,"mtime":1651245034708,"results":"40","hashOfConfig":"26"},{"size":642,"mtime":1651246707515,"results":"41","hashOfConfig":"26"},{"size":471,"mtime":1651246141344,"results":"42","hashOfConfig":"26"},{"size":742,"mtime":1651246330006,"results":"43","hashOfConfig":"26"},{"size":695,"mtime":1651246477760,"results":"44","hashOfConfig":"26"},{"size":1207,"mtime":1651246748290,"results":"45","hashOfConfig":"26"},{"size":1157,"mtime":1651246695926,"results":"46","hashOfConfig":"26"},{"size":4930,"mtime":1651246652323,"results":"47","hashOfConfig":"26"},{"size":578,"mtime":1651408223454,"results":"48","hashOfConfig":"26"},{"size":236,"mtime":1650912036858,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ha5g5r",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\AppRouter.jsx",[],["110","111"],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeItem.jsx",["112","113","114"],"import React from 'react';\n\nimport star from '../assets/star.png'\nimport {useHistory} from \"react-router-dom\"\nimport {CHALLENGE_ROUTE} from \"../utils/consts\";\n\nconst ChallengeItem = ({challenge}) => {\n    const history = useHistory()\n    return (\n        // <Col md={3} className={\"mt-3\"} onClick={() => history.push(CHALLENGE_ROUTE + '/' + challenge.id)}>\n        //     <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n        //         <Image width={150} height={150} src={process.env.REACT_APP_API_URL + challenge.img}/>\n        //         <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n        //             <div>Samsung...</div>\n        //             <div className=\"d-flex align-items-center\">\n        //                 <div>{challenge.rating}</div>\n        //                 <Image width={18} height={18} src={star}/>\n        //             </div>\n        //         </div>\n        //         <div>{challenge.name}</div>\n        //     </Card>\n        // </Col>\n        <div></div>\n    );\n};\n\nexport default ChallengeItem;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\index.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\App.jsx",["115"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return 1;\n        // return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\ChallengeStore.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\UserStore.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\userAPI.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\routes.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\index.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ChallengePage.jsx",["116","117","118"],"import React, { useEffect, useState } from 'react';\nimport bigStar from '../assets/bigStar.png';\nimport { useParams } from 'react-router-dom';\nimport { fetchOneChallenge } from '../http/challengeAPI';\n\nconst ChallengePage = () => {\n  const [challenge, setChallenge] = useState({ info: [] });\n  const { id } = useParams();\n  useEffect(() => {\n    fetchOneChallenge(id).then((data) => setChallenge(data));\n  }, []);\n\n  return (\n    // <Container className=\"mt-3\">\n    //   <Row>\n    //     <Col md={4}>\n    //       <Image width={300} height={300} src={process.env.REACT_APP_API_URL + challenge.img} />\n    //     </Col>\n    //     <Col md={4}>\n    //       <Row className=\"d-flex flex-column align-items-center\">\n    //         <h2>{challenge.name}</h2>\n    //         <div\n    //           className=\"d-flex align-items-center justify-content-center\"\n    //           style={{\n    //             background: `url(${bigStar}) no-repeat center center`,\n    //             width: 240,\n    //             height: 240,\n    //             backgroundSize: 'cover',\n    //             fontSize: 64,\n    //           }}\n    //         >\n    //           {challenge.rating}\n    //         </div>\n    //       </Row>\n    //     </Col>\n    //     <Col md={4}>\n    //       <Card\n    //         className=\"d-flex flex-column align-items-center justify-content-around\"\n    //         style={{ width: 300, height: 300, fontSize: 32, border: '5px solid lightgray' }}\n    //       > \n    //         <h3>От: {challenge.price} руб.</h3>\n    //         <Button variant={'outline-dark'}>Добавить в корзину</Button>\n    //       </Card>\n    //     </Col>\n    //   </Row>\n    //   <Row className=\"d-flex flex-column m-3\">\n    //     <h1>Характеристики</h1>\n    //     {challenge.info.map((info, index) => (\n    //       <Row key={info.id} style={{ background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10 }}>\n    //         {info.title}: {info.description}\n    //       </Row>\n    //     ))}\n    //   </Row>\n    // </Container>\n    <div>\n      \n    </div>\n  );\n};\n\nexport default ChallengePage;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Auth.jsx",["119","120","121","122","123","124"],"import React, { useContext, useState } from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, CTF_ROUTE } from '../utils/consts';\nimport { login, registration } from '../http/userAPI';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context);\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n      user.setUser(user);\n      user.setIsAuth(true);\n      history.push(CTF_ROUTE);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n\n  return (\n    // <Container className=\"d-flex justify-content-center align-items-center\" style={{ height: window.innerHeight - 54 }}>\n    //   <Card style={{ width: 600 }} className=\"p-5\">\n    //     <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\n    //     <Form className=\"d-flex flex-column\">\n    //       <Form.Control\n    //         className=\"mt-3\"\n    //         placeholder=\"Введите ваш email...\"\n    //         value={email}\n    //         onChange={(e) => setEmail(e.target.value)}\n    //       />\n    //       <Form.Control\n    //         className=\"mt-3\"\n    //         placeholder=\"Введите ваш пароль...\"\n    //         value={password}\n    //         onChange={(e) => setPassword(e.target.value)}\n    //         type=\"password\"\n    //       />\n    //       <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n    //         {isLogin ? (\n    //           <div>\n    //             Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n    //           </div>\n    //         ) : (\n    //           <div>\n    //             Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n    //           </div>\n    //         )}\n    //         <Button variant={'outline-success'} onClick={click}>\n    //           {isLogin ? 'Войти' : 'Регистрация'}\n    //         </Button>\n    //       </Row>\n    //     </Form>\n    //   </Card>\n    // </Container>\n    <div></div>\n  );\n});\n\nexport default Auth;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\CTF.jsx",["125","126","127","128","129","130"],"import React, { useContext, useEffect } from 'react';\nimport TypeBar from '../components/TypeBar';\nimport DifficultyBar from '../components/DifficultyBar';\nimport ChallengeList from '../components/ChallengeList';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\nimport { fetchDifficulties, fetchTypes, fetchChallenges } from '../http/challengeAPI';\nimport Pages from '../components/Pages';\n\nconst CTF = observer(() => {\n  const { challenge } = useContext(Context);\n\n  useEffect(() => {\n    fetchTypes().then((data) => challenge.setTypes(data));\n    fetchDifficulties().then((data) => challenge.setDifficulties(data));\n    fetchChallenges(null, null, 1, 2).then((data) => {\n      challenge.setChallenges(data.rows);\n      challenge.setTotalCount(data.count);\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchChallenges(challenge.selectedType.id, challenge.selectedDifficulty.id, challenge.page, 2).then((data) => {\n      challenge.setChallenges(data.rows);\n      challenge.setTotalCount(data.count);\n    });\n  }, [challenge.page, challenge.selectedType, challenge.selectedDifficulty]);\n\n  return (\n    // <Container>\n    //   <Row className=\"mt-2\">\n    //     <Col md={3}>\n    //       <TypeBar />\n    //     </Col>\n    //     <Col md={9}>\n    //       <DifficultyBar />\n    //       <ChallengeList />\n    //       <Pages />\n    //     </Col>\n    //   </Row>\n    // </Container>\n    <div>\n      \n    </div>\n  );\n});\n\nexport default CTF;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ToSolve.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Admin.jsx",["131","132","133","134","135","136","137","138","139"],"import React, { useState } from 'react';\nimport CreateDifficulty from '../components/modals/CreateBrand';\nimport CreateChallenge from '../components/modals/CreateChallenge';\nimport CreateType from '../components/modals/CreateType';\n\nconst Admin = () => {\n  const [difficultyVisible, setDifficultyVisible] = useState(false);\n  const [typeVisible, setTypeVisible] = useState(false);\n  const [challengeVisible, setChallengeVisible] = useState(false);\n\n  return (\n    <div>\n      \n    </div>\n    // <Container className=\"d-flex flex-column\">\n    //   <Button variant={'outline-dark'} className=\"mt-4 p-2\" onClick={() => setTypeVisible(true)}>\n    //     Добавить тип\n    //   </Button>\n    //   <Button variant={'outline-dark'} className=\"mt-4 p-2\" onClick={() => setDifficultyVisible(true)}>\n    //     Добавить бренд\n    //   </Button>\n    //   <Button variant={'outline-dark'} className=\"mt-4 p-2\" onClick={() => setChallengeVisible(true)}>\n    //     Добавить устройство\n    //   </Button>\n    //   <CreateDifficulty show={difficultyVisible} onHide={() => setDifficultyVisible(false)} />\n    //   <CreateChallenge show={challengeVisible} onHide={() => setChallengeVisible(false)} />\n    //   <CreateType show={typeVisible} onHide={() => setTypeVisible(false)} />\n    // </Container>\n  );\n};\n\nexport default Admin;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\challengeAPI.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\TypeBar.jsx",["140"],"import React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\n\nconst TypeBar = observer(() => {\n  const { challenge } = useContext(Context);\n  return (\n    // <ListGroup>\n    //   {challenge.types.map((type) => (\n    //     <ListGroup.Item\n    //       style={{ cursor: 'pointer' }}\n    //       active={type.id === challenge.selectedType.id}\n    //       onClick={() => challenge.setSelectedType(type)}\n    //       key={type.id}\n    //     >\n    //       {type.name}\n    //     </ListGroup.Item>\n    //   ))}\n    // </ListGroup>\n    <div></div>\n  );\n});\n\nexport default TypeBar;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeList.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\DifficultyBar.jsx",["141"],"import React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\n\nconst BrandBar = observer(() => {\n  const { challenge } = useContext(Context);\n\n  return (\n    // <Row className=\"d-flex\">\n    //   {challenge.difficulties.map((difficulty) => (\n    //     <Card\n    //       style={{ cursor: 'pointer' }}\n    //       key={difficulty.id}\n    //       className=\"p-3\"\n    //       onClick={() => challenge.setSelectedDifficulty(difficulty)}\n    //       border={difficulty.id === challenge.selectedDifficulty.id ? 'danger' : 'light'}\n    //     >\n    //       {difficulty.name}\n    //     </Card>\n    //   ))}\n    // </Row>\n    <div>\n      \n    </div>\n  );\n});\nexport default BrandBar;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\Pages.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateBrand.jsx",["142","143"],"import React, { useState } from 'react';\nimport { createDifficulty, createType } from '../../http/challengeAPI';\nconst CreateDifficulty = ({ show, onHide }) => {\n  const [value, setValue] = useState('');\n\n  const addDifficulty = () => {\n    createDifficulty({ name: value }).then((data) => {\n      setValue('');\n      onHide();\n    });\n  };\n  return (\n    <div>\n\n    </div>\n    // <Modal show={show} onHide={onHide} centered>\n    //   <Modal.Header closeButton>\n    //     <Modal.Title id=\"contained-modal-title-vcenter\">Добавить тип</Modal.Title>\n    //   </Modal.Header>\n    //   <Modal.Body>\n    //     <Form>\n    //       <Form.Control\n    //         value={value}\n    //         onChange={(e) => setValue(e.target.value)}\n    //         placeholder={'Введите название типа'}\n    //       />\n    //     </Form>\n    //   </Modal.Body>\n    //   <Modal.Footer>\n    //     <Button variant=\"outline-danger\" onClick={onHide}>\n    //       Закрыть\n    //     </Button>\n    //     <Button variant=\"outline-success\" onClick={addDifficulty}>\n    //       Добавить\n    //     </Button>\n    //   </Modal.Footer>\n    // </Modal>\n  );\n};\n\nexport default CreateDifficulty;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateType.jsx",["144","145"],"import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { createType } from '../../http/challengeAPI';\n\nconst CreateType = ({ show, onHide }) => {\n  const [value, setValue] = useState('');\n\n  const addType = () => {\n    createType({ name: value }).then((data) => {\n      setValue('');\n      onHide();\n    });\n  };\n\n  return (\n      <div></div>\n    // <Modal show={show} onHide={onHide} centered>\n    //   <Modal.Header closeButton>\n    //     <Modal.Title id=\"contained-modal-title-vcenter\">Добавить тип</Modal.Title>\n    //   </Modal.Header>\n    //   <Modal.Body>\n    //     <Form>\n    //       <Form.Control\n    //         value={value}\n    //         onChange={(e) => setValue(e.target.value)}\n    //         placeholder={'Введите название типа'}\n    //       />\n    //     </Form>\n    //   </Modal.Body>\n    //   <Modal.Footer>\n    //     <Button variant=\"outline-danger\" onClick={onHide}>\n    //       Закрыть\n    //     </Button>\n    //     <Button variant=\"outline-success\" onClick={addType}>\n    //       Добавить\n    //     </Button>\n    //   </Modal.Footer>\n    // </Modal>\n  );\n};\n\nexport default CreateType;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateChallenge.jsx",["146","147","148","149","150","151","152","153","154"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../../index';\nimport { createChallenge, fetchDifficulties, fetchChallenges, fetchTypes } from '../../http/challengeAPI';\nimport { observer } from 'mobx-react-lite';\n\nconst CreateChallenge = observer(({ show, onHide }) => {\n  const { challenge } = useContext(Context);\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [file, setFile] = useState(null);\n  const [info, setInfo] = useState([]);\n\n  useEffect(() => {\n    fetchTypes().then((data) => challenge.setTypes(data));\n    fetchDifficulties().then((data) => challenge.setDifficulties(data));\n  }, []);\n\n  const addInfo = () => {\n    setInfo([...info, { title: '', description: '', number: Date.now() }]);\n  };\n  const removeInfo = (number) => {\n    setInfo(info.filter((i) => i.number !== number));\n  };\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map((i) => (i.number === number ? { ...i, [key]: value } : i)));\n  };\n\n  const selectFile = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const addChallenge = () => {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('price', `${price}`);\n    formData.append('img', file);\n    formData.append('challengeId', challenge.selectedDifficulty.id);\n    formData.append('typeId', challenge.selectedType.id);\n    formData.append('info', JSON.stringify(info));\n    createChallenge(formData).then((data) => onHide());\n  };\n\n  return (\n    // <Modal show={show} onHide={onHide} centered>\n    //   <Modal.Header closeButton>\n    //     <Modal.Title id=\"contained-modal-title-vcenter\">Добавить задачу</Modal.Title>\n    //   </Modal.Header>\n    //   <Modal.Body>\n    //     <Form>\n    //       <Dropdown className=\"mt-2 mb-2\">\n    //         <Dropdown.Toggle>{challenge.selectedType.name || 'Выберите тип'}</Dropdown.Toggle>\n    //         <Dropdown.Menu>\n    //           {challenge.types.map((type) => (\n    //             <Dropdown.Item onClick={() => challenge.setSelectedType(type)} key={type.id}>\n    //               {type.name}\n    //             </Dropdown.Item>\n    //           ))}\n    //         </Dropdown.Menu>\n    //       </Dropdown>\n    //       <Dropdown className=\"mt-2 mb-2\">\n    //         <Dropdown.Toggle>{challenge.selectedDifficulty.name || 'Выберите тип'}</Dropdown.Toggle>\n    //         <Dropdown.Menu>\n    //           {challenge.difficulties.map((difficulty) => (\n    //             <Dropdown.Item onClick={() => challenge.setSelectedDifficulty(difficulty)} key={difficulty.id}>\n    //               {difficulty.name}\n    //             </Dropdown.Item>\n    //           ))}\n    //         </Dropdown.Menu>\n    //       </Dropdown>\n    //       <Form.Control\n    //         value={name}\n    //         onChange={(e) => setName(e.target.value)}\n    //         className=\"mt-3\"\n    //         placeholder=\"Введите название устройства\"\n    //       />\n    //       <Form.Control\n    //         value={price}\n    //         onChange={(e) => setPrice(Number(e.target.value))}\n    //         className=\"mt-3\"\n    //         placeholder=\"Введите стоимость устройства\"\n    //         type=\"number\"\n    //       />\n    //       <Form.Control className=\"mt-3\" type=\"file\" onChange={selectFile} />\n    //       <hr />\n    //       <Button variant={'outline-dark'} onClick={addInfo}>\n    //         Добавить новое свойство\n    //       </Button>\n    //       {info.map((i) => (\n    //         <Row className=\"mt-4\" key={i.number}>\n    //           <Col md={4}>\n    //             <Form.Control\n    //               value={i.title}\n    //               onChange={(e) => changeInfo('title', e.target.value, i.number)}\n    //               placeholder=\"Введите название свойства\"\n    //             />\n    //           </Col>\n    //           <Col md={4}>\n    //             <Form.Control\n    //               value={i.description}\n    //               onChange={(e) => changeInfo('description', e.target.value, i.number)}\n    //               placeholder=\"Введите описание свойства\"\n    //             />\n    //           </Col>\n    //           <Col md={4}>\n    //             <Button onClick={() => removeInfo(i.number)} variant={'outline-danger'}>\n    //               Удалить\n    //             </Button>\n    //           </Col>\n    //         </Row>\n    //       ))}\n    //     </Form>\n    //   </Modal.Body>\n    //   <Modal.Footer>\n    //     <Button variant=\"outline-danger\" onClick={onHide}>\n    //       Закрыть\n    //     </Button>\n    //     <Button variant=\"outline-success\" onClick={addChallenge}>\n    //       Добавить\n    //     </Button>\n    //   </Modal.Footer>\n    // </Modal>\n    <div>\n\n    </div>\n  );\n});\n\nexport default CreateChallenge;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\NavBar\\NavBar.jsx",["155","156","157","158","159","160","161"],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\utils\\consts.jsx",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":12},{"ruleId":"166","severity":1,"message":"170","line":5,"column":9,"nodeType":"168","messageId":"169","endLine":5,"endColumn":24},{"ruleId":"166","severity":1,"message":"171","line":8,"column":11,"nodeType":"168","messageId":"169","endLine":8,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":18,"column":8,"nodeType":"174","endLine":18,"endColumn":10,"suggestions":"175"},{"ruleId":"166","severity":1,"message":"176","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":15},{"ruleId":"166","severity":1,"message":"177","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":19},{"ruleId":"172","severity":1,"message":"178","line":11,"column":6,"nodeType":"174","endLine":11,"endColumn":8,"suggestions":"179"},{"ruleId":"166","severity":1,"message":"180","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":17},{"ruleId":"166","severity":1,"message":"181","line":3,"column":23,"nodeType":"168","messageId":"169","endLine":3,"endColumn":41},{"ruleId":"166","severity":1,"message":"182","line":13,"column":17,"nodeType":"168","messageId":"169","endLine":13,"endColumn":25},{"ruleId":"166","severity":1,"message":"183","line":14,"column":20,"nodeType":"168","messageId":"169","endLine":14,"endColumn":31},{"ruleId":"166","severity":1,"message":"184","line":16,"column":9,"nodeType":"168","messageId":"169","endLine":16,"endColumn":14},{"ruleId":"166","severity":1,"message":"185","line":22,"column":9,"nodeType":"168","messageId":"169","endLine":22,"endColumn":13},{"ruleId":"166","severity":1,"message":"186","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":15},{"ruleId":"166","severity":1,"message":"187","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":21},{"ruleId":"166","severity":1,"message":"188","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":21},{"ruleId":"166","severity":1,"message":"189","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":13},{"ruleId":"172","severity":1,"message":"190","line":20,"column":6,"nodeType":"174","endLine":20,"endColumn":8,"suggestions":"191"},{"ruleId":"172","severity":1,"message":"190","line":27,"column":6,"nodeType":"174","endLine":27,"endColumn":76,"suggestions":"192"},{"ruleId":"166","severity":1,"message":"193","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":24},{"ruleId":"166","severity":1,"message":"194","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":23},{"ruleId":"166","severity":1,"message":"195","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":18},{"ruleId":"166","severity":1,"message":"196","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":27},{"ruleId":"166","severity":1,"message":"197","line":7,"column":29,"nodeType":"168","messageId":"169","endLine":7,"endColumn":49},{"ruleId":"166","severity":1,"message":"198","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":21},{"ruleId":"166","severity":1,"message":"199","line":8,"column":23,"nodeType":"168","messageId":"169","endLine":8,"endColumn":37},{"ruleId":"166","severity":1,"message":"200","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":26},{"ruleId":"166","severity":1,"message":"201","line":9,"column":28,"nodeType":"168","messageId":"169","endLine":9,"endColumn":47},{"ruleId":"166","severity":1,"message":"177","line":6,"column":11,"nodeType":"168","messageId":"169","endLine":6,"endColumn":20},{"ruleId":"166","severity":1,"message":"177","line":6,"column":11,"nodeType":"168","messageId":"169","endLine":6,"endColumn":20},{"ruleId":"166","severity":1,"message":"202","line":2,"column":28,"nodeType":"168","messageId":"169","endLine":2,"endColumn":38},{"ruleId":"166","severity":1,"message":"203","line":6,"column":9,"nodeType":"168","messageId":"169","endLine":6,"endColumn":22},{"ruleId":"166","severity":1,"message":"204","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"205","line":8,"column":9,"nodeType":"168","messageId":"169","endLine":8,"endColumn":16},{"ruleId":"166","severity":1,"message":"206","line":3,"column":46,"nodeType":"168","messageId":"169","endLine":3,"endColumn":61},{"ruleId":"166","severity":1,"message":"207","line":8,"column":16,"nodeType":"168","messageId":"169","endLine":8,"endColumn":23},{"ruleId":"166","severity":1,"message":"208","line":9,"column":17,"nodeType":"168","messageId":"169","endLine":9,"endColumn":25},{"ruleId":"172","severity":1,"message":"190","line":16,"column":6,"nodeType":"174","endLine":16,"endColumn":8,"suggestions":"209"},{"ruleId":"166","severity":1,"message":"210","line":18,"column":9,"nodeType":"168","messageId":"169","endLine":18,"endColumn":16},{"ruleId":"166","severity":1,"message":"211","line":21,"column":9,"nodeType":"168","messageId":"169","endLine":21,"endColumn":19},{"ruleId":"166","severity":1,"message":"212","line":24,"column":9,"nodeType":"168","messageId":"169","endLine":24,"endColumn":19},{"ruleId":"166","severity":1,"message":"213","line":28,"column":9,"nodeType":"168","messageId":"169","endLine":28,"endColumn":19},{"ruleId":"166","severity":1,"message":"214","line":32,"column":9,"nodeType":"168","messageId":"169","endLine":32,"endColumn":21},{"ruleId":"166","severity":1,"message":"180","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":17},{"ruleId":"166","severity":1,"message":"215","line":3,"column":19,"nodeType":"168","messageId":"169","endLine":3,"endColumn":26},{"ruleId":"166","severity":1,"message":"216","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":21},{"ruleId":"166","severity":1,"message":"217","line":4,"column":23,"nodeType":"168","messageId":"169","endLine":4,"endColumn":34},{"ruleId":"166","severity":1,"message":"218","line":4,"column":36,"nodeType":"168","messageId":"169","endLine":4,"endColumn":45},{"ruleId":"166","severity":1,"message":"171","line":11,"column":9,"nodeType":"168","messageId":"169","endLine":11,"endColumn":16},{"ruleId":"166","severity":1,"message":"219","line":13,"column":9,"nodeType":"168","messageId":"169","endLine":13,"endColumn":15},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'star' is defined but never used.","Identifier","unusedVar","'CHALLENGE_ROUTE' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["222"],"'bigStar' is defined but never used.","'challenge' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["223"],"'NavLink' is defined but never used.","'REGISTRATION_ROUTE' is defined but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'click' is assigned a value but never used.","'data' is assigned a value but never used.","'TypeBar' is defined but never used.","'DifficultyBar' is defined but never used.","'ChallengeList' is defined but never used.","'Pages' is defined but never used.","React Hook useEffect has a missing dependency: 'challenge'. Either include it or remove the dependency array.",["224"],["225"],"'CreateDifficulty' is defined but never used.","'CreateChallenge' is defined but never used.","'CreateType' is defined but never used.","'difficultyVisible' is assigned a value but never used.","'setDifficultyVisible' is assigned a value but never used.","'typeVisible' is assigned a value but never used.","'setTypeVisible' is assigned a value but never used.","'challengeVisible' is assigned a value but never used.","'setChallengeVisible' is assigned a value but never used.","'createType' is defined but never used.","'addDifficulty' is assigned a value but never used.","'Modal' is defined but never used.","'addType' is assigned a value but never used.","'fetchChallenges' is defined but never used.","'setName' is assigned a value but never used.","'setPrice' is assigned a value but never used.",["226"],"'addInfo' is assigned a value but never used.","'removeInfo' is assigned a value but never used.","'changeInfo' is assigned a value but never used.","'selectFile' is assigned a value but never used.","'addChallenge' is assigned a value but never used.","'NavMenu' is defined but never used.","'ADMIN_ROUTE' is defined but never used.","'LOGIN_ROUTE' is defined but never used.","'CTF_ROUTE' is defined but never used.","'logOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"231","fix":"235"},"Update the dependencies array to be: [user]",{"range":"236","text":"237"},"Update the dependencies array to be: [id]",{"range":"238","text":"239"},"Update the dependencies array to be: [challenge]",{"range":"240","text":"241"},"Update the dependencies array to be: [challenge.page, challenge.selectedType, challenge.selectedDifficulty, challenge]",{"range":"242","text":"243"},{"range":"244","text":"241"},[607,609],"[user]",[409,411],"[id]",[802,804],"[challenge]",[1042,1112],"[challenge.page, challenge.selectedType, challenge.selectedDifficulty, challenge]",[678,680]]