[{"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\AppRouter.jsx":"1","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeItem.jsx":"2","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\index.jsx":"3","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\App.jsx":"4","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\ChallengeStore.jsx":"5","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\UserStore.jsx":"6","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\userAPI.jsx":"7","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\routes.jsx":"8","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\index.jsx":"9","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ChallengePage.jsx":"10","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Auth.jsx":"11","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\CTF.jsx":"12","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ToSolve.jsx":"13","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Admin.jsx":"14","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\challengeAPI.jsx":"15","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\TypeBar.jsx":"16","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeList.jsx":"17","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\DifficultyBar.jsx":"18","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\Pages.jsx":"19","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateBrand.jsx":"20","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateType.jsx":"21","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateChallenge.jsx":"22","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\NavBar\\NavBar.jsx":"23","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\utils\\consts.jsx":"24"},{"size":751,"mtime":1650883284475,"results":"25","hashOfConfig":"26"},{"size":1117,"mtime":1650611973155,"results":"27","hashOfConfig":"26"},{"size":449,"mtime":1650610830694,"results":"28","hashOfConfig":"26"},{"size":867,"mtime":1650657222121,"results":"29","hashOfConfig":"26"},{"size":1256,"mtime":1650610479919,"results":"30","hashOfConfig":"26"},{"size":401,"mtime":1611985807000,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1611985807000,"results":"32","hashOfConfig":"26"},{"size":790,"mtime":1650911735409,"results":"33","hashOfConfig":"26"},{"size":402,"mtime":1650612737462,"results":"34","hashOfConfig":"26"},{"size":2046,"mtime":1650691161346,"results":"35","hashOfConfig":"26"},{"size":2592,"mtime":1650610184359,"results":"36","hashOfConfig":"26"},{"size":1536,"mtime":1650691161346,"results":"37","hashOfConfig":"26"},{"size":148,"mtime":1650911949271,"results":"38","hashOfConfig":"26"},{"size":1339,"mtime":1650613748541,"results":"39","hashOfConfig":"26"},{"size":1046,"mtime":1650612731640,"results":"40","hashOfConfig":"26"},{"size":641,"mtime":1650610871889,"results":"41","hashOfConfig":"26"},{"size":510,"mtime":1650611450872,"results":"42","hashOfConfig":"26"},{"size":720,"mtime":1650613675181,"results":"43","hashOfConfig":"26"},{"size":694,"mtime":1650611633386,"results":"44","hashOfConfig":"26"},{"size":1211,"mtime":1650691161346,"results":"45","hashOfConfig":"26"},{"size":1164,"mtime":1650691161346,"results":"46","hashOfConfig":"26"},{"size":4785,"mtime":1650691239252,"results":"47","hashOfConfig":"26"},{"size":1555,"mtime":1650691195956,"results":"48","hashOfConfig":"26"},{"size":236,"mtime":1650912036858,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ha5g5r",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\AppRouter.jsx",[],["105","106"],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeItem.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\index.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\App.jsx",["107"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\ChallengeStore.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\store\\UserStore.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\userAPI.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\routes.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\index.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ChallengePage.jsx",["108"],"import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap';\nimport bigStar from '../assets/bigStar.png';\nimport { useParams } from 'react-router-dom';\nimport { fetchOneChallenge } from '../http/challengeAPI';\n\nconst ChallengePage = () => {\n  const [challenge, setChallenge] = useState({ info: [] });\n  const { id } = useParams();\n  useEffect(() => {\n    fetchOneChallenge(id).then((data) => setChallenge(data));\n  }, []);\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col md={4}>\n          <Image width={300} height={300} src={process.env.REACT_APP_API_URL + challenge.img} />\n        </Col>\n        <Col md={4}>\n          <Row className=\"d-flex flex-column align-items-center\">\n            <h2>{challenge.name}</h2>\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                background: `url(${bigStar}) no-repeat center center`,\n                width: 240,\n                height: 240,\n                backgroundSize: 'cover',\n                fontSize: 64,\n              }}\n            >\n              {challenge.rating}\n            </div>\n          </Row>\n        </Col>\n        <Col md={4}>\n          <Card\n            className=\"d-flex flex-column align-items-center justify-content-around\"\n            style={{ width: 300, height: 300, fontSize: 32, border: '5px solid lightgray' }}\n          > \n            <h3>От: {challenge.price} руб.</h3>\n            <Button variant={'outline-dark'}>Добавить в корзину</Button>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"d-flex flex-column m-3\">\n        <h1>Характеристики</h1>\n        {challenge.info.map((info, index) => (\n          <Row key={info.id} style={{ background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10 }}>\n            {info.title}: {info.description}\n          </Row>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ChallengePage;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Auth.jsx",["109"],"import React, { useContext, useState } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, CTF_ROUTE } from '../utils/consts';\nimport { login, registration } from '../http/userAPI';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context);\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n      user.setUser(user);\n      user.setIsAuth(true);\n      history.push(CTF_ROUTE);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center\" style={{ height: window.innerHeight - 54 }}>\n      <Card style={{ width: 600 }} className=\"p-5\">\n        <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\n        <Form className=\"d-flex flex-column\">\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ? (\n              <div>\n                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n            ) : (\n              <div>\n                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            )}\n            <Button variant={'outline-success'} onClick={click}>\n              {isLogin ? 'Войти' : 'Регистрация'}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\CTF.jsx",["110","111","112"],"import React, { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport TypeBar from '../components/TypeBar';\nimport DifficultyBar from '../components/DifficultyBar';\nimport ChallengeList from '../components/ChallengeList';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\nimport { fetchDifficulties, fetchDevices, fetchTypes, fetchChallenges } from '../http/challengeAPI';\nimport Pages from '../components/Pages';\n\nconst CTF = observer(() => {\n  const { challenge } = useContext(Context);\n\n  useEffect(() => {\n    fetchTypes().then((data) => challenge.setTypes(data));\n    fetchDifficulties().then((data) => challenge.setDifficulties(data));\n    fetchChallenges(null, null, 1, 2).then((data) => {\n      challenge.setChallenges(data.rows);\n      challenge.setTotalCount(data.count);\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchChallenges(challenge.selectedType.id, challenge.selectedDifficulty.id, challenge.page, 2).then((data) => {\n      challenge.setDevices(data.rows);\n      challenge.setTotalCount(data.count);\n    });\n  }, [challenge.page, challenge.selectedType, challenge.selectedDifficulty]);\n\n  return (\n    <Container>\n      <Row className=\"mt-2\">\n        <Col md={3}>\n          <TypeBar />\n        </Col>\n        <Col md={9}>\n          <DifficultyBar />\n          <ChallengeList />\n          <Pages />\n        </Col>\n      </Row>\n    </Container>\n  );\n});\n\nexport default CTF;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\ToSolve.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\pages\\Admin.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\http\\challengeAPI.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\TypeBar.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\ChallengeList.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\DifficultyBar.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\Pages.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateBrand.jsx",["113"],"import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Form } from 'react-bootstrap';\nimport { createDifficulty, createType } from '../../http/challengeAPI';\n\nconst CreateDifficulty = ({ show, onHide }) => {\n  const [value, setValue] = useState('');\n\n  const addDifficulty = () => {\n    createDifficulty({ name: value }).then((data) => {\n      setValue('');\n      onHide();\n    });\n  };\n  return (\n    <Modal show={show} onHide={onHide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Добавить тип</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n            placeholder={'Введите название типа'}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>\n          Закрыть\n        </Button>\n        <Button variant=\"outline-success\" onClick={addDifficulty}>\n          Добавить\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CreateDifficulty;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateType.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\modals\\CreateChallenge.jsx",["114","115"],"import React, { useContext, useEffect, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Dropdown, Form, Row, Col } from 'react-bootstrap';\nimport { Context } from '../../index';\nimport { createChallenge, fetchDifficulties, fetchChallenges, fetchTypes } from '../../http/challengeAPI';\nimport { observer } from 'mobx-react-lite';\n\nconst CreateChallenge = observer(({ show, onHide }) => {\n  const { challenge } = useContext(Context);\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [file, setFile] = useState(null);\n  const [info, setInfo] = useState([]);\n\n  useEffect(() => {\n    fetchTypes().then((data) => challenge.setTypes(data));\n    fetchDifficulties().then((data) => challenge.setDifficulties(data));\n  }, []);\n\n  const addInfo = () => {\n    setInfo([...info, { title: '', description: '', number: Date.now() }]);\n  };\n  const removeInfo = (number) => {\n    setInfo(info.filter((i) => i.number !== number));\n  };\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map((i) => (i.number === number ? { ...i, [key]: value } : i)));\n  };\n\n  const selectFile = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const addChallenge = () => {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('price', `${price}`);\n    formData.append('img', file);\n    formData.append('challengeId', challenge.selectedDifficulty.id);\n    formData.append('typeId', challenge.selectedType.id);\n    formData.append('info', JSON.stringify(info));\n    createChallenge(formData).then((data) => onHide());\n  };\n\n  return (\n    <Modal show={show} onHide={onHide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Добавить задачу</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>{challenge.selectedType.name || 'Выберите тип'}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {challenge.types.map((type) => (\n                <Dropdown.Item onClick={() => challenge.setSelectedType(type)} key={type.id}>\n                  {type.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>{challenge.selectedDifficulty.name || 'Выберите тип'}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {challenge.difficulties.map((difficulty) => (\n                <Dropdown.Item onClick={() => challenge.setSelectedDifficulty(difficulty)} key={difficulty.id}>\n                  {difficulty.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Введите название устройства\"\n          />\n          <Form.Control\n            value={price}\n            onChange={(e) => setPrice(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Введите стоимость устройства\"\n            type=\"number\"\n          />\n          <Form.Control className=\"mt-3\" type=\"file\" onChange={selectFile} />\n          <hr />\n          <Button variant={'outline-dark'} onClick={addInfo}>\n            Добавить новое свойство\n          </Button>\n          {info.map((i) => (\n            <Row className=\"mt-4\" key={i.number}>\n              <Col md={4}>\n                <Form.Control\n                  value={i.title}\n                  onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                  placeholder=\"Введите название свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Form.Control\n                  value={i.description}\n                  onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                  placeholder=\"Введите описание свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Button onClick={() => removeInfo(i.number)} variant={'outline-danger'}>\n                  Удалить\n                </Button>\n              </Col>\n            </Row>\n          ))}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>\n          Закрыть\n        </Button>\n        <Button variant=\"outline-success\" onClick={addChallenge}>\n          Добавить\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n\nexport default CreateChallenge;\n","C:\\Users\\ihear\\Desktop\\cry\\client\\src\\components\\NavBar\\NavBar.jsx",[],"C:\\Users\\ihear\\Desktop\\cry\\client\\src\\utils\\consts.jsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":19,"column":8,"nodeType":"122","endLine":19,"endColumn":10,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":12,"column":6,"nodeType":"122","endLine":12,"endColumn":8,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":26,"column":9,"nodeType":"128","messageId":"129","endLine":26,"endColumn":13},{"ruleId":"126","severity":1,"message":"130","line":10,"column":29,"nodeType":"128","messageId":"129","endLine":10,"endColumn":41},{"ruleId":"120","severity":1,"message":"131","line":23,"column":6,"nodeType":"122","endLine":23,"endColumn":8,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"131","line":30,"column":6,"nodeType":"122","endLine":30,"endColumn":76,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":4,"column":28,"nodeType":"128","messageId":"129","endLine":4,"endColumn":38},{"ruleId":"126","severity":1,"message":"135","line":5,"column":46,"nodeType":"128","messageId":"129","endLine":5,"endColumn":61},{"ruleId":"120","severity":1,"message":"131","line":18,"column":6,"nodeType":"122","endLine":18,"endColumn":8,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["140"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'fetchDevices' is defined but never used.","React Hook useEffect has a missing dependency: 'challenge'. Either include it or remove the dependency array.",["141"],["142"],"'createType' is defined but never used.","'fetchChallenges' is defined but never used.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"148","fix":"152"},"Update the dependencies array to be: [user]",{"range":"153","text":"154"},"Update the dependencies array to be: [id]",{"range":"155","text":"156"},"Update the dependencies array to be: [challenge]",{"range":"157","text":"158"},"Update the dependencies array to be: [challenge.page, challenge.selectedType, challenge.selectedDifficulty, challenge]",{"range":"159","text":"160"},{"range":"161","text":"158"},[648,650],"[user]",[485,487],"[id]",[939,941],"[challenge]",[1176,1246],"[challenge.page, challenge.selectedType, challenge.selectedDifficulty, challenge]",[789,791]]